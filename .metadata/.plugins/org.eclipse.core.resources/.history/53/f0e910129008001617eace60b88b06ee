package com.example.blemasterv3;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.FragmentManager;
import android.app.TabActivity;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.net.ParseException;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TabHost;
import android.widget.TabHost.TabSpec;

import com.example.blemasterv3.ListAdapter.UUIDCallback;
import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu; 

public class MainActivity extends TabActivity {

	// layout
	private SlidingMenu slidingMenu;
	// map
	private Button locate_btn = null;
	public String minor = null;
	public String major = null;
	public String position = null;
	private WampService mWampService;
	
	private Button location;

	private Handler handler;
	 

	//
	public static ListAdapter listAdapter;
	private Button scan_btn;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		initSlidingMenu();
		initTabUi();

		FragmentManager fm = getFragmentManager();
		DeviceListFragment devicelistFragment = (DeviceListFragment) fm
				.findFragmentById(R.id.DeviceListFragment);

		listAdapter = new ListAdapter(getApplicationContext(),
				R.layout.device_list_fragment, cb);

		devicelistFragment.setListAdapter(listAdapter);

		scan_btn = (Button) findViewById(R.id.scan_btn);
		scan_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				listAdapter.onSetUp();
				listAdapter.scanLeDevice(true);
			}
		});

		
		
		// Map
		location = (Button)findViewById(R.id.position_btn);
		
		locate_btn = (Button) findViewById(R.id.locate_btn);
		locate_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				// TODO Auto-generated method stub
				Log.e("major", major + "");
				Log.e("minor", minor + "");

				String a = Tools.Tools.decTohex(major);
				Log.e("major", a);

				String b = Tools.Tools.decTohex(minor);
				Log.e("minor", b);
 
				location.setVisibility(visibility);
				
				
				
//		        Intent wampConnIntent = new Intent(getApplicationContext(), WampService.class);
//		        bindService(wampConnIntent, mServiceConnection, BIND_AUTO_CREATE);
			}
				 
		});

	}
	// Code to manage Service lifecycle.
//		private ServiceConnection mServiceConnection = new ServiceConnection() {
//
//			@Override
//			public void onServiceConnected(ComponentName componentName,
//					IBinder service) {
//				mWampService = ((WampService.LocalBinder) service)
//						.getService();
//				mWampService.connnectWamp();
//  
//			}
//
//			@Override
//			public void onServiceDisconnected(ComponentName componentName) {
//				mWampService = null;
//			}
//		};
//	 

	private void initTabUi() {

		// 获取tabhost组件
		TabHost tabHost = getTabHost();
		// 创建第一个tab页
		TabSpec scantab = tabHost.newTabSpec("scantab").setIndicator("Scanner")
				.setContent(R.id.tab01);
		// 添加第一个标签页
		tabHost.addTab(scantab);

		TabSpec tab2 = tabHost.newTabSpec("tab2").setIndicator("Map")
				.setContent(R.id.tab02);
		tabHost.addTab(tab2);

		TabSpec tab3 = tabHost.newTabSpec("tab3").setIndicator("tab3")
				.setContent(R.id.tab03);
		tabHost.addTab(tab3);

	}

	private void initSlidingMenu() {

		slidingMenu = new SlidingMenu(this);
		slidingMenu.setMode(SlidingMenu.LEFT);
		// slidingMenu.setMenu(R.layout.menu_left);
		slidingMenu.setMenu(R.layout.menu_left_layout);// 零뒤寧몸（璘）꿋긋으
		// 零뒤랗몸(塘)꿋긋으,흼零LEFT_RIGHT친駕賈痰맡렘랬零塘꿋긋으
		// slidingMenu.setSecondaryMenu(R.layout.navigation_layout);
		// 쉥꿋긋으瀾젯돕Activity
		slidingMenu.attachToActivity(this, SlidingMenu.SLIDING_CONTENT);
		// 零꿋긋으綾緞댕鬼
		// slidingMenu.setShadowWidth(10);
		// 零튤잼약잼
		slidingMenu.setBehindOffsetRes(R.dimen.sliding_menu_offset);
		// 홍팁친駕，홍팁뺄땡떼옵댔역
		slidingMenu.setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);

	}

	private MyUUIDCallback cb = new MyUUIDCallback();

	public class MyUUIDCallback implements UUIDCallback {

		@Override
		public void setMajor(String major) {
			// TODO Auto-generated method stub
			MainActivity.this.major = major;
		}

		@Override
		public void setMinor(String minor) {
			// TODO Auto-generated method stub
			MainActivity.this.minor = minor;
		}

	}
 

	}
	
	

