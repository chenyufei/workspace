package com.vic.chatclient;

import java.util.ArrayList;
import java.util.HashMap;
 

import android.support.v7.app.ActionBarActivity;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.IBinder;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;


public class MainActivity extends ActionBarActivity {

	private Button conn_btn = null;
	private TextView address_tx = null;

	private ListView history_lt = null;

	private ArrayList<HashMap<String, String>> history_items = null;
	private ArrayAdapter<HashMap<String, String>> historyAdapter = null;
	private ServiceConnection mServerConnection = null;

	private ClientService mClientService = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		address_tx = (TextView) findViewById(R.id.address_tx);

		history_lt = (ListView) findViewById(R.id.content_lv);
		history_items = new ArrayList<HashMap<String, String>>();

		historyAdapter = new ArrayAdapter<HashMap<String, String>>(this,
				android.R.layout.simple_list_item_1, history_items);
		history_lt.setAdapter(historyAdapter);

		conn_btn = (Button) findViewById(R.id.conn_btn);
		conn_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				// HashMap<String, String> msg = new HashMap<String, String>();
				// msg.put("server", "aaa");
				// history_items.add(msg);
				// historyAdapter.notifyDataSetChanged();

				mServerConnection = new ServiceConnection() {

					@Override
					public void onServiceConnected(ComponentName name,
							IBinder service) {
						mClientService = ((mClientService.LocalBinder) service)
								.getService();
						String serverIP = mClientService.getIpAddress();
						displayIP(serverIP);
					}

					@Override
					public void onServiceDisconnected(ComponentName name) {
						disconnected();
					}
				};

				Intent clientIntent = new Intent(getApplicationContext(),
						mClientService.class);
				bindService(serverIntent, mServerConnection, BIND_AUTO_CREATE);
			}
		});

	}

	public void displayIP(final String ip) {
		runOnUiThread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				address_tx.setText(ip);
			}
		});
	}

	public void disconnected() {
		runOnUiThread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				address_tx.setText("server disconnected");
			}
		});
	}
 
}
